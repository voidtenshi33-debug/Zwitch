{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user within the Zwitch application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.  This is the Firebase Authentication UID."
        },
        "displayName": {
          "type": "string",
          "description": "The user's full name."
        },
        "photoURL": {
          "type": "string",
          "description": "URL of the user's profile picture.  Can be null if not set.",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "description": "The date and time the user account was created.",
          "format": "date-time"
        },
        "averageStarRating": {
          "type": "number",
          "description": "The average star rating of the user based on feedback from other users.",
          "format": "number"
        },
        "joinDate": {
          "type": "string",
          "description": "The date the user joined the platform.",
          "format": "date-time"
        },
        "totalItemsRecycled": {
          "type": "number",
          "description": "The total number of items the user has recycled through the platform."
        }
      },
      "required": [
        "id",
        "displayName",
        "email",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. The 'userId' is the Firebase Auth UID, enabling path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Authentication UID of the user."
            }
          ]
        }
      }
    ],
    "reasoning": "This Firestore structure is designed to support Zwitch's core features, including user management, item posting/searching, direct contact, and more. The key principle is Authorization Independence, achieved through denormalization where necessary. User data is stored in `/users/{userId}`, with `userId` matching the Firebase Auth UID. This enables path-based access control for user-specific data. To support QAPs, we ensure structural segregation; for instance, user profiles and admin roles are stored in separate collections, each with distinct security requirements. This design avoids hierarchical authorization dependencies, making security rules more straightforward and robust."
  }
}